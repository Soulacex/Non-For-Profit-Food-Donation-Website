{"ast":null,"code":"import { __decorate } from \"tslib\";\n// helper-page.component.ts\nimport { Component } from '@angular/core';\nexport let HelperPageComponent = class HelperPageComponent {\n  constructor(fundingBasket, cupboardService) {\n    this.fundingBasket = fundingBasket;\n    this.cupboardService = cupboardService;\n    this.searchText = '';\n    this.newNeed = {\n      name: '',\n      cost: 0,\n      type: '',\n      quantity: 0\n    };\n  }\n  ngOnInit() {\n    this.getAllNeeds();\n    this.getAllCupboardNeeds();\n  }\n  addNeedToBasket(need) {\n    this.fundingBasket.addSupportedNeed(need);\n  }\n  removeNeedFromBasket(need) {\n    this.fundingBasket.removeSupportedNeed(need);\n  }\n  checkout() {\n    this.fundingBasket.checkOut();\n  }\n  applySearchFilter() {\n    this.filteredNeeds = this.needsList.filter(need => need.name.toLowerCase().includes(this.searchText.toLowerCase()));\n  }\n  getAllCupboardNeeds() {\n    this.cupboardService.getAllcupboardNeeds().subscribe(cupboardNeeds => {\n      this.cupboardNeeds = cupboardNeeds;\n    }, error => {\n      console.error('Error fetching cupboard needs:', error);\n    });\n  }\n  getAllNeeds() {\n    this.fundingBasket.getAllNeeds().subscribe(needs => {\n      this.needsList = needs;\n      this.applySearchFilter();\n    }, error => {\n      console.error('Error fetching needs:', error);\n    });\n  }\n  addNewNeed() {\n    this.cupboardService.createNeed(this.newNeed).subscribe(newNeed => {\n      this.cupboardNeeds.push(newNeed);\n      // Clear the form fields after adding a need\n      this.newNeed = {\n        name: '',\n        cost: 0,\n        type: '',\n        quantity: 0\n      };\n    }, error => {\n      console.error('Error creating new need:', error);\n    });\n  }\n  updateNeed(need) {\n    this.cupboardService.updateNeed(need).subscribe(_ => {\n      // Update the need in the local list\n      const index = this.cupboardNeeds.findIndex(n => n.name === need.name);\n      if (index !== -1) {\n        this.cupboardNeeds[index] = need;\n      }\n    }, error => {\n      console.error('Error updating need:', error);\n    });\n  }\n  deleteNeed(need) {\n    this.cupboardService.deleteNeed(need.name).subscribe(_ => {\n      // Remove the need from the local list\n      this.cupboardNeeds = this.cupboardNeeds.filter(n => n.name !== need.name);\n    }, error => {\n      console.error('Error deleting need:', error);\n    });\n  }\n  searchNeeds(searchText) {\n    this.searchText = searchText;\n    this.applySearchFilter();\n  }\n};\nHelperPageComponent = __decorate([Component({\n  selector: 'app-helper-page',\n  templateUrl: './helper-page.component.html',\n  styleUrls: ['./helper-page.component.scss']\n})], HelperPageComponent);","map":{"version":3,"names":["Component","HelperPageComponent","constructor","fundingBasket","cupboardService","searchText","newNeed","name","cost","type","quantity","ngOnInit","getAllNeeds","getAllCupboardNeeds","addNeedToBasket","need","addSupportedNeed","removeNeedFromBasket","removeSupportedNeed","checkout","checkOut","applySearchFilter","filteredNeeds","needsList","filter","toLowerCase","includes","getAllcupboardNeeds","subscribe","cupboardNeeds","error","console","needs","addNewNeed","createNeed","push","updateNeed","_","index","findIndex","n","deleteNeed","searchNeeds","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/soulacex/swen-261/team-project-2231-swen-261-07-7-g-fundsinhighplaces/ufund-ui/UFund-Store/src/app/helper/helper-page/helper-page.component.ts"],"sourcesContent":["// helper-page.component.ts\nimport { Component } from '@angular/core';\nimport { FundingBasket } from 'src/app/fundingbasket.service';\nimport { Needs } from 'src/app/needs';\nimport { CupboardService } from 'src/app/cupboard.service';\n\n@Component({\n  selector: 'app-helper-page',\n  templateUrl: './helper-page.component.html',\n  styleUrls: ['./helper-page.component.scss']\n})\nexport class HelperPageComponent {\n  public needsList: Needs[];\n  public cupboardNeeds: Needs[];\n  public searchText: string = '';\n  public filteredNeeds: Needs[];\n  public newNeed: Needs = { name: '', cost: 0, type: '', quantity: 0 };\n\n  constructor(\n    public fundingBasket: FundingBasket,\n    private cupboardService: CupboardService\n  ) {}\n\n  ngOnInit(): void {\n    this.getAllNeeds();\n    this.getAllCupboardNeeds();\n  }\n\n  addNeedToBasket(need: Needs): void {\n    this.fundingBasket.addSupportedNeed(need);\n  }\n\n  removeNeedFromBasket(need: Needs): void {\n    this.fundingBasket.removeSupportedNeed(need);\n  }\n\n  checkout(): void {\n    this.fundingBasket.checkOut();\n  }\n\n  applySearchFilter(): void {\n    this.filteredNeeds = this.needsList.filter((need) =>\n      need.name.toLowerCase().includes(this.searchText.toLowerCase())\n    );\n  }\n\n  getAllCupboardNeeds(): void {\n    this.cupboardService.getAllcupboardNeeds().subscribe(\n      (cupboardNeeds: Needs[]) => {\n        this.cupboardNeeds = cupboardNeeds;\n      },\n      (error) => {\n        console.error('Error fetching cupboard needs:', error);\n      }\n    );\n  }\n\n  getAllNeeds(): void {\n    this.fundingBasket.getAllNeeds().subscribe(\n      (needs: Needs[]) => {\n        this.needsList = needs;\n        this.applySearchFilter();\n      },\n      (error) => {\n        console.error('Error fetching needs:', error);\n      }\n    );\n  }\n\n  addNewNeed(): void {\n    this.cupboardService.createNeed(this.newNeed).subscribe(\n      (newNeed: Needs) => {\n        this.cupboardNeeds.push(newNeed);\n        // Clear the form fields after adding a need\n        this.newNeed = { name: '', cost: 0, type: '', quantity: 0 };\n      },\n      (error) => {\n        console.error('Error creating new need:', error);\n      }\n    );\n  }\n\n  updateNeed(need: Needs): void {\n    this.cupboardService.updateNeed(need).subscribe(\n      (_) => {\n        // Update the need in the local list\n        const index = this.cupboardNeeds.findIndex((n) => n.name === need.name);\n        if (index !== -1) {\n          this.cupboardNeeds[index] = need;\n        }\n      },\n      (error) => {\n        console.error('Error updating need:', error);\n      }\n    );\n  }\n\n  deleteNeed(need: Needs): void {\n    this.cupboardService.deleteNeed(need.name).subscribe(\n      (_) => {\n        // Remove the need from the local list\n        this.cupboardNeeds = this.cupboardNeeds.filter((n) => n.name !== need.name);\n      },\n      (error) => {\n        console.error('Error deleting need:', error);\n      }\n    );\n  }\n\n  searchNeeds(searchText: string): void {\n    this.searchText = searchText;\n    this.applySearchFilter();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}