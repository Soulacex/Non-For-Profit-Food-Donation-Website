{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Cupboard } from 'src/app/cupboard.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FundingBasket {\n  constructor(http) {\n    this.http = http;\n    this.needsUrl = 'http://localhost:8080/helper';\n    this.supportedNeeds = [];\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    this.cupboard = new Cupboard(http);\n  }\n  /** GET needs whose name contains search term */\n  searchNeeds(term) {\n    if (!term.trim()) {\n      return of([]);\n    }\n    return this.http.get('${this.needsUrl}/?name=${term}').pipe(tap(x => x.length ? this.log('found needs matching \"${term}\"') : this.log('no needs matching \"${term}\"')), catchError(this.handleError('searchNeeds', [])));\n  }\n  // GET request for all supported needs\n  getSupportedNeeds() {\n    const url = `${this.needsUrl}/fundingbasket`;\n    return this.http.get(url).pipe(tap(supportedNeeds => this.log('fetched supported needs')), catchError(this.handleError('getSupportedNeeds', [])));\n  }\n  // POST request to add a new supported need\n  addSupportedNeed(need) {\n    const url = `${this.needsUrl}/fundingbasket/addneed`;\n    return this.http.post(url, need, this.httpOptions).pipe(tap(addedNeed => this.log(`added need with name=${addedNeed.name}`)), catchError(this.handleError('addSupportedNeed')));\n  }\n  // DELETE request to remove a supported need\n  removeSupportedNeed(name) {\n    const url = `${this.needsUrl}/fundingbasket/${name}`;\n    return this.http.delete(url, this.httpOptions).pipe(tap(_ => this.log(`deleted need with name=${name}`)), catchError(this.handleError('removeSupportedNeed')));\n  }\n  // PUT request to update the cupboard after checking out needs\n  checkOut() {\n    const url = `${this.needsUrl}/fundingbasket/checkout`;\n    return this.http.put(url, null, this.httpOptions).pipe(tap(_ => this.log('checked out supported needs')), catchError(this.handleError('checkOut')));\n  }\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   *\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  handleError(operation = 'operation', result) {\n    return error => {\n      console.error(error);\n      this.log('${operation} failed: ${error.message}');\n      return of(result);\n    };\n  }\n  static #_ = this.ɵfac = function FundingBasket_Factory(t) {\n    return new (t || FundingBasket)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FundingBasket,\n    factory: FundingBasket.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","of","catchError","tap","Cupboard","FundingBasket","constructor","http","needsUrl","supportedNeeds","httpOptions","headers","cupboard","searchNeeds","term","trim","get","pipe","x","length","log","handleError","getSupportedNeeds","url","addSupportedNeed","need","post","addedNeed","name","removeSupportedNeed","delete","_","checkOut","put","operation","result","error","console","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/soulacex/swen-261/team-project-2231-swen-261-07-7-g-fundsinhighplaces/ufund-ui/UFund-Store/src/app/fundingbasket.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Needs } from 'src/app/needs'; \nimport { Cupboard } from 'src/app/cupboard.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FundingBasket {\n  private needsUrl = 'http://localhost:8080/helper';\n  private supportedNeeds: Needs[] = [];\n  private cupboard: Cupboard;\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n  };\n\n  constructor(private http: HttpClient) {\n    this.cupboard = new Cupboard(http);\n  }\n\n  /** GET needs whose name contains search term */\n  searchNeeds(term: string): Observable<Needs[]> {\n    if (!term.trim()) {\n      return of([]);\n    }\n    return this.http.get<Needs[]>('${this.needsUrl}/?name=${term}').pipe(\n      tap((x) => x.length ? this.log('found needs matching \"${term}\"') : this.log('no needs matching \"${term}\"')),\n      catchError(this.handleError<Needs[]>('searchNeeds', []))\n    );\n  }\n  \n  // GET request for all supported needs\n  getSupportedNeeds(): Observable<Needs[]> {\n    const url = `${this.needsUrl}/fundingbasket`;\n    return this.http.get<Needs[]>(url).pipe(\n      tap((supportedNeeds) => this.log('fetched supported needs')),\n      catchError(this.handleError<Needs[]>('getSupportedNeeds', []))\n    );\n  }\n\n  // POST request to add a new supported need\n  addSupportedNeed(need: Needs): Observable<Needs> {\n    const url = `${this.needsUrl}/fundingbasket/addneed`;\n    return this.http.post<Needs>(url, need, this.httpOptions).pipe(\n      tap((addedNeed: Needs) => this.log(`added need with name=${addedNeed.name}`)),\n      catchError(this.handleError<Needs>('addSupportedNeed'))\n    );\n  }\n\n  // DELETE request to remove a supported need\n  removeSupportedNeed(name: string): Observable<Needs> {\n    const url = `${this.needsUrl}/fundingbasket/${name}`;\n    return this.http.delete<Needs>(url, this.httpOptions).pipe(\n      tap((_) => this.log(`deleted need with name=${name}`)),\n      catchError(this.handleError<Needs>('removeSupportedNeed'))\n    );\n  }\n\n  // PUT request to update the cupboard after checking out needs\n  checkOut(): Observable<Needs> {\n    const url = `${this.needsUrl}/fundingbasket/checkout`;\n    return this.http.put<Needs>(url, null, this.httpOptions).pipe(\n      tap((_) => this.log('checked out supported needs')),\n      catchError(this.handleError<Needs>('checkOut'))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   *\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      console.error(error);\n      this.log('${operation} failed: ${error.message}');\n      return of(result as T);\n    };\n  }\n  \n\n}"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAAqBC,EAAE,QAAQ,MAAM;AACrC,SAASC,UAAU,EAAEC,GAAG,QAAQ,gBAAgB;AAEhD,SAASC,QAAQ,QAAQ,0BAA0B;;;AAKnD,OAAM,MAAOC,aAAa;EASxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IARhB,KAAAC,QAAQ,GAAG,8BAA8B;IACzC,KAAAC,cAAc,GAAY,EAAE;IAGpC,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIX,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;IAGC,IAAI,CAACY,QAAQ,GAAG,IAAIR,QAAQ,CAACG,IAAI,CAAC;EACpC;EAEA;EACAM,WAAWA,CAACC,IAAY;IACtB,IAAI,CAACA,IAAI,CAACC,IAAI,EAAE,EAAE;MAChB,OAAOd,EAAE,CAAC,EAAE,CAAC;;IAEf,OAAO,IAAI,CAACM,IAAI,CAACS,GAAG,CAAU,gCAAgC,CAAC,CAACC,IAAI,CAClEd,GAAG,CAAEe,CAAC,IAAKA,CAAC,CAACC,MAAM,GAAG,IAAI,CAACC,GAAG,CAAC,gCAAgC,CAAC,GAAG,IAAI,CAACA,GAAG,CAAC,6BAA6B,CAAC,CAAC,EAC3GlB,UAAU,CAAC,IAAI,CAACmB,WAAW,CAAU,aAAa,EAAE,EAAE,CAAC,CAAC,CACzD;EACH;EAEA;EACAC,iBAAiBA,CAAA;IACf,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACf,QAAQ,gBAAgB;IAC5C,OAAO,IAAI,CAACD,IAAI,CAACS,GAAG,CAAUO,GAAG,CAAC,CAACN,IAAI,CACrCd,GAAG,CAAEM,cAAc,IAAK,IAAI,CAACW,GAAG,CAAC,yBAAyB,CAAC,CAAC,EAC5DlB,UAAU,CAAC,IAAI,CAACmB,WAAW,CAAU,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAC/D;EACH;EAEA;EACAG,gBAAgBA,CAACC,IAAW;IAC1B,MAAMF,GAAG,GAAG,GAAG,IAAI,CAACf,QAAQ,wBAAwB;IACpD,OAAO,IAAI,CAACD,IAAI,CAACmB,IAAI,CAAQH,GAAG,EAAEE,IAAI,EAAE,IAAI,CAACf,WAAW,CAAC,CAACO,IAAI,CAC5Dd,GAAG,CAAEwB,SAAgB,IAAK,IAAI,CAACP,GAAG,CAAC,wBAAwBO,SAAS,CAACC,IAAI,EAAE,CAAC,CAAC,EAC7E1B,UAAU,CAAC,IAAI,CAACmB,WAAW,CAAQ,kBAAkB,CAAC,CAAC,CACxD;EACH;EAEA;EACAQ,mBAAmBA,CAACD,IAAY;IAC9B,MAAML,GAAG,GAAG,GAAG,IAAI,CAACf,QAAQ,kBAAkBoB,IAAI,EAAE;IACpD,OAAO,IAAI,CAACrB,IAAI,CAACuB,MAAM,CAAQP,GAAG,EAAE,IAAI,CAACb,WAAW,CAAC,CAACO,IAAI,CACxDd,GAAG,CAAE4B,CAAC,IAAK,IAAI,CAACX,GAAG,CAAC,0BAA0BQ,IAAI,EAAE,CAAC,CAAC,EACtD1B,UAAU,CAAC,IAAI,CAACmB,WAAW,CAAQ,qBAAqB,CAAC,CAAC,CAC3D;EACH;EAEA;EACAW,QAAQA,CAAA;IACN,MAAMT,GAAG,GAAG,GAAG,IAAI,CAACf,QAAQ,yBAAyB;IACrD,OAAO,IAAI,CAACD,IAAI,CAAC0B,GAAG,CAAQV,GAAG,EAAE,IAAI,EAAE,IAAI,CAACb,WAAW,CAAC,CAACO,IAAI,CAC3Dd,GAAG,CAAE4B,CAAC,IAAK,IAAI,CAACX,GAAG,CAAC,6BAA6B,CAAC,CAAC,EACnDlB,UAAU,CAAC,IAAI,CAACmB,WAAW,CAAQ,UAAU,CAAC,CAAC,CAChD;EACH;EAEA;;;;;;;EAOQA,WAAWA,CAAIa,SAAS,GAAG,WAAW,EAAEC,MAAU;IACxD,OAAQC,KAAU,IAAmB;MACnCC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpB,IAAI,CAAChB,GAAG,CAAC,uCAAuC,CAAC;MACjD,OAAOnB,EAAE,CAACkC,MAAW,CAAC;IACxB,CAAC;EACH;EAAC,QAAAJ,CAAA,G;qBAzEU1B,aAAa,EAAAiC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbrC,aAAa;IAAAsC,OAAA,EAAbtC,aAAa,CAAAuC,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}