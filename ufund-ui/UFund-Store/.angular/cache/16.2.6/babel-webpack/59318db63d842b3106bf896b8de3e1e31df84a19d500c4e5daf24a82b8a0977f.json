{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let AdminPageComponent = class AdminPageComponent {\n  constructor(adminService, fb, cupboardService, notificationService) {\n    this.adminService = adminService;\n    this.fb = fb;\n    this.cupboardService = cupboardService;\n    this.notificationService = notificationService;\n    this.cupboardNeeds = [];\n    this.form = this.fb.group({\n      needName: ['', Validators.required],\n      needCost: ['', Validators.required],\n      needType: ['', Validators.required],\n      needQuant: ['', Validators.required]\n    });\n    this.updateForm = this.fb.group({\n      updateName: ['', Validators.required],\n      updateCost: ['', Validators.required],\n      updateType: ['', Validators.required],\n      updateQuant: ['', Validators.required]\n    });\n    this.notifications = [];\n  }\n  ngOnInit() {\n    this.getNeeds();\n    this.subscribeToCupboardUpdates();\n  }\n  getNeeds() {\n    this.adminService.getNeeds().subscribe(Needs => {\n      this.cupboardNeeds = Needs;\n      this.cupboardService.updateCupboardNeeds(Needs);\n    });\n  }\n  subscribeToCupboardUpdates() {\n    this.cupboardService.getCupboardNeedsObservable().subscribe(cupboardNeeds => {\n      for (const updatedNeed of cupboardNeeds) {\n        const existingNeedIndex = this.cupboardNeeds.findIndex(n => n.name === updatedNeed.name);\n        if (existingNeedIndex !== -1) {\n          this.cupboardNeeds[existingNeedIndex] = updatedNeed;\n        } else {\n          this.cupboardNeeds.push(updatedNeed);\n        }\n      }\n    });\n  }\n  reset(resetForm) {\n    resetForm.reset();\n  }\n  add(needName, needCost, needType, needQuant) {\n    let needToAdd = this.makeNewNeed(needName, needCost, needType, needQuant);\n    this.adminService.addNeed(needToAdd).subscribe(need => {\n      this.cupboardNeeds.push(need);\n      this.cupboardService.updateCupboardNeeds(this.cupboardNeeds);\n    });\n  }\n  delete(need) {\n    this.cupboardNeeds = this.cupboardNeeds.filter(n => n !== need);\n    this.adminService.deleteNeed(need.name).subscribe(() => {\n      this.cupboardService.updateCupboardNeeds(this.cupboardNeeds);\n    });\n  }\n  update(needName, needCost, needType, needQuant) {\n    let updatedNeed = this.makeNewNeed(needName, needCost, needType, needQuant);\n    this.adminService.updateNeed(updatedNeed).subscribe(() => {\n      this.getNeeds();\n    });\n  }\n  makeNewNeed(needName, needCost, needType, needQuant) {\n    needName = needName.trim();\n    needType = needType.trim();\n    let need = {\n      name: needName,\n      cost: needCost,\n      type: needType,\n      quantity: needQuant\n    };\n    return need;\n  }\n};\nAdminPageComponent = __decorate([Component({\n  selector: 'app-admin-page',\n  templateUrl: './admin-page.component.html',\n  styleUrls: ['./admin-page.component.scss']\n})], AdminPageComponent);","map":{"version":3,"names":["Component","Validators","AdminPageComponent","constructor","adminService","fb","cupboardService","notificationService","cupboardNeeds","form","group","needName","required","needCost","needType","needQuant","updateForm","updateName","updateCost","updateType","updateQuant","notifications","ngOnInit","getNeeds","subscribeToCupboardUpdates","subscribe","Needs","updateCupboardNeeds","getCupboardNeedsObservable","updatedNeed","existingNeedIndex","findIndex","n","name","push","reset","resetForm","add","needToAdd","makeNewNeed","addNeed","need","delete","filter","deleteNeed","update","updateNeed","trim","cost","type","quantity","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/soulacex/swen-261/team-project-2231-swen-261-07-7-g-fundsinhighplaces/ufund-ui/UFund-Store/src/app/admin/admin-page/admin-page.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/admin.service';\nimport { Needs } from 'src/app/needs';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { min } from 'rxjs';\nimport { Cupboard } from 'src/app/cupboard.service';\nimport { NotificationService } from 'src/app/notification.service';\nimport { Notification } from 'src/app/notification';\n\n@Component({\n  selector: 'app-admin-page',\n  templateUrl: './admin-page.component.html',\n  styleUrls: ['./admin-page.component.scss']\n})\nexport class AdminPageComponent implements OnInit{\n  cupboardNeeds: Needs[] = [];\n  form: FormGroup = this.fb.group({\n    needName: ['',Validators.required],\n    needCost: ['',Validators.required],\n    needType: ['',Validators.required],\n    needQuant: ['',Validators.required]\n  });\n  updateForm: FormGroup = this.fb.group({\n    updateName: ['',Validators.required],\n    updateCost: ['',Validators.required],\n    updateType: ['',Validators.required],\n    updateQuant: ['',Validators.required]\n  });\n\n  notifications: Notification[] = [];\n\n  constructor(private adminService: AdminService, private fb: FormBuilder, private cupboardService: Cupboard, \n    private notificationService: NotificationService){ };\n\n  ngOnInit(): void {\n      this.getNeeds();\n      this.subscribeToCupboardUpdates();\n  }\n\n  getNeeds(): void {\n      this.adminService.getNeeds().subscribe((Needs) => \n      { this.cupboardNeeds = Needs;\n      this.cupboardService.updateCupboardNeeds(Needs);\n    });\n  }\n\n  subscribeToCupboardUpdates(): void {\n    this.cupboardService.getCupboardNeedsObservable().subscribe((cupboardNeeds: Needs[]) => {\n      for (const updatedNeed of cupboardNeeds) {\n        const existingNeedIndex = this.cupboardNeeds.findIndex(n => n.name === updatedNeed.name);\n  \n        if (existingNeedIndex !== -1) {\n          this.cupboardNeeds[existingNeedIndex] = updatedNeed;\n        } else {\n          this.cupboardNeeds.push(updatedNeed);\n        }\n      }\n    });\n  }\n\n  reset(resetForm: FormGroup): void{\n    resetForm.reset();\n  }\n\n  add(needName: string, needCost: number, needType: string, needQuant: number): void {\n    let needToAdd = this.makeNewNeed(needName, needCost, needType, needQuant);\n    this.adminService.addNeed(needToAdd as Needs).subscribe((need) => {\n      this.cupboardNeeds.push(need);\n      this.cupboardService.updateCupboardNeeds(this.cupboardNeeds);\n    });\n  }\n\n  delete(need: Needs): void {\n    this.cupboardNeeds = this.cupboardNeeds.filter((n) => n !== need);\n    this.adminService.deleteNeed(need.name).subscribe(() => {\n      this.cupboardService.updateCupboardNeeds(this.cupboardNeeds);\n    });\n  }\n  \n  update(needName: string, needCost: number, needType: string, needQuant: number): void {\n    let updatedNeed = this.makeNewNeed(needName, needCost, needType, needQuant);\n    this.adminService.updateNeed(updatedNeed as Needs).subscribe(() => {\n      this.getNeeds();\n    });\n  }\n\n  makeNewNeed(needName: string, needCost: number, needType: string, needQuant: number): Needs {\n    needName = needName.trim();\n    needType = needType.trim();\n\n    let need = {\n      name: needName,\n      cost: needCost,\n      type: needType,\n      quantity: needQuant,\n    };\n    return need as Needs;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}