{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class HelperService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8080';\n    this.helperUrl = `${this.baseUrl}/helper`;\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  getAllNeeds() {\n    return this.http.get(`${this.helperUrl}`, this.httpOptions).pipe(tap(_ => catchError(this.handleError('getAllNeeds', []))));\n  }\n  addSupportedNeed(need) {\n    return this.http.post(`${this.helperUrl}`, need, this.httpOptions).pipe(tap(_ => {}), catchError(this.handleError('addSupportedNeed')));\n  }\n  removeSupportedNeed(needName) {\n    return this.http.delete(`${this.helperUrl}/${needName}`, this.httpOptions).pipe(tap(_ => catchError(this.handleError('removeSupportedNeed'))));\n  }\n  checkOut() {\n    return this.http.put(`${this.helperUrl}`, null, this.httpOptions).pipe(tap(_ => catchError(this.handleError('checkOut'))));\n  }\n  searchPartialName(searchText) {\n    return this.http.get(`${this.helperUrl}/?searchText=${searchText}`, this.httpOptions).pipe(tap(_ => catchError(this.handleError('searchPartialName', []))));\n  }\n  handleError(operation = 'operation', result) {\n    return error => {\n      console.error(error);\n      return of(result);\n    };\n  }\n  static #_ = this.ɵfac = function HelperService_Factory(t) {\n    return new (t || HelperService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HelperService,\n    factory: HelperService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","of","catchError","tap","HelperService","constructor","http","baseUrl","helperUrl","httpOptions","headers","getAllNeeds","get","pipe","_","handleError","addSupportedNeed","need","post","removeSupportedNeed","needName","delete","checkOut","put","searchPartialName","searchText","operation","result","error","console","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\samue\\SWEN261\\team-project-2231-swen-261-07-7-g-fundsinhighplaces\\ufund-ui\\UFund-Store\\src\\app\\helper.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { Needs } from './needs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HelperService {\r\n  private baseUrl = 'http://localhost:8080'; \r\n  private helperUrl = `${this.baseUrl}/helper`;\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n  };\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllNeeds(): Observable<Needs[]> {\r\n    return this.http.get<Needs[]>(`${this.helperUrl}`, this.httpOptions).pipe(\r\n      tap(_ => catchError(this.handleError<Needs[]>('getAllNeeds', [])))\r\n    );\r\n  }\r\n\r\n  addSupportedNeed(need: Needs): Observable<Needs> {\r\n    return this.http.post<Needs>(`${this.helperUrl}`, need, this.httpOptions).pipe(\r\n      tap(_ => {}),\r\n      catchError(this.handleError<Needs>('addSupportedNeed'))\r\n    );\r\n  }  \r\n\r\n  removeSupportedNeed(needName: string): Observable<Needs> {\r\n    return this.http.delete<Needs>(`${this.helperUrl}/${needName}`, this.httpOptions).pipe(\r\n      tap(_ => catchError(this.handleError<Needs>('removeSupportedNeed')))\r\n    );\r\n  }\r\n\r\n  checkOut(): Observable<any> {\r\n    return this.http.put<any>(`${this.helperUrl}`, null, this.httpOptions).pipe(\r\n      tap(_ => catchError(this.handleError<any>('checkOut')))\r\n    );\r\n  }\r\n\r\n  searchPartialName(searchText: string): Observable<Needs[]> {\r\n    return this.http.get<Needs[]>(`${this.helperUrl}/?searchText=${searchText}`, this.httpOptions).pipe(\r\n      tap(_ => catchError(this.handleError<Needs[]>('searchPartialName', [])))\r\n    );\r\n  }\r\n\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      console.error(error);\r\n      return of(result as T);\r\n    };\r\n  }\r\n}"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAAqBC,EAAE,QAAQ,MAAM;AACrC,SAASC,UAAU,EAAEC,GAAG,QAAQ,gBAAgB;;;AAMhD,OAAM,MAAOC,aAAa;EAQxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAPhB,KAAAC,OAAO,GAAG,uBAAuB;IACjC,KAAAC,SAAS,GAAG,GAAG,IAAI,CAACD,OAAO,SAAS;IAE5C,KAAAE,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIV,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;EAEsC;EAEvCW,WAAWA,CAAA;IACT,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAU,GAAG,IAAI,CAACJ,SAAS,EAAE,EAAE,IAAI,CAACC,WAAW,CAAC,CAACI,IAAI,CACvEV,GAAG,CAACW,CAAC,IAAIZ,UAAU,CAAC,IAAI,CAACa,WAAW,CAAU,aAAa,EAAE,EAAE,CAAC,CAAC,CAAC,CACnE;EACH;EAEAC,gBAAgBA,CAACC,IAAW;IAC1B,OAAO,IAAI,CAACX,IAAI,CAACY,IAAI,CAAQ,GAAG,IAAI,CAACV,SAAS,EAAE,EAAES,IAAI,EAAE,IAAI,CAACR,WAAW,CAAC,CAACI,IAAI,CAC5EV,GAAG,CAACW,CAAC,IAAG,CAAE,CAAC,CAAC,EACZZ,UAAU,CAAC,IAAI,CAACa,WAAW,CAAQ,kBAAkB,CAAC,CAAC,CACxD;EACH;EAEAI,mBAAmBA,CAACC,QAAgB;IAClC,OAAO,IAAI,CAACd,IAAI,CAACe,MAAM,CAAQ,GAAG,IAAI,CAACb,SAAS,IAAIY,QAAQ,EAAE,EAAE,IAAI,CAACX,WAAW,CAAC,CAACI,IAAI,CACpFV,GAAG,CAACW,CAAC,IAAIZ,UAAU,CAAC,IAAI,CAACa,WAAW,CAAQ,qBAAqB,CAAC,CAAC,CAAC,CACrE;EACH;EAEAO,QAAQA,CAAA;IACN,OAAO,IAAI,CAAChB,IAAI,CAACiB,GAAG,CAAM,GAAG,IAAI,CAACf,SAAS,EAAE,EAAE,IAAI,EAAE,IAAI,CAACC,WAAW,CAAC,CAACI,IAAI,CACzEV,GAAG,CAACW,CAAC,IAAIZ,UAAU,CAAC,IAAI,CAACa,WAAW,CAAM,UAAU,CAAC,CAAC,CAAC,CACxD;EACH;EAEAS,iBAAiBA,CAACC,UAAkB;IAClC,OAAO,IAAI,CAACnB,IAAI,CAACM,GAAG,CAAU,GAAG,IAAI,CAACJ,SAAS,gBAAgBiB,UAAU,EAAE,EAAE,IAAI,CAAChB,WAAW,CAAC,CAACI,IAAI,CACjGV,GAAG,CAACW,CAAC,IAAIZ,UAAU,CAAC,IAAI,CAACa,WAAW,CAAU,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC,CACzE;EACH;EAEQA,WAAWA,CAAIW,SAAS,GAAG,WAAW,EAAEC,MAAU;IACxD,OAAQC,KAAU,IAAmB;MACnCC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpB,OAAO3B,EAAE,CAAC0B,MAAW,CAAC;IACxB,CAAC;EACH;EAAC,QAAAb,CAAA,G;qBA9CUV,aAAa,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAb9B,aAAa;IAAA+B,OAAA,EAAb/B,aAAa,CAAAgC,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}