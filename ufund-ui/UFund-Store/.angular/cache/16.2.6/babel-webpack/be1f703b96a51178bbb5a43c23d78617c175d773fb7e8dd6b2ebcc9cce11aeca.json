{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/helper-message.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction LandingComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\nconst _c0 = \"#logincontainer[_ngcontent-%COMP%] {\\n  background-color: green;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  height: 100vh;\\n  flex-direction: column;\\n  gap: 50px;\\n}\\n#logincontainer[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%] {\\n  margin: 0px;\\n  color: #ffffff;\\n}\\n#logincontainer[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  background-color: #000000;\\n  color: #ffffff;\\n  height: -moz-fit-content;\\n  height: fit-content;\\n  border: 0px;\\n  font-size: 20px;\\n  padding: 10px 20px;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcHVibGljL2xhbmRpbmcvbGFuZGluZy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLHVCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxTQUFBO0FBREo7QUFFSTtFQUNJLFdBQUE7RUFDQSxjQUFBO0FBQVI7QUFFSTtFQUNJLHlCQUFBO0VBQ0EsY0FBQTtFQUNBLHdCQUFBO0VBQUEsbUJBQUE7RUFDQSxXQUFBO0VBQ0EsZUFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQUFSIiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xyXG5cclxuI2xvZ2luY29udGFpbmVye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBnYXA6IDUwcHg7XHJcbiAgICBoMXtcclxuICAgICAgICBtYXJnaW46IDBweDs7XHJcbiAgICAgICAgY29sb3I6ICNmZmZmZmY7XHJcbiAgICB9XHJcbiAgICBidXR0b257XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDAwMDtcclxuICAgICAgICBjb2xvcjogI2ZmZmZmZjtcclxuICAgICAgICBoZWlnaHQ6IGZpdC1jb250ZW50O1xyXG4gICAgICAgIGJvcmRlcjogMHB4O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgfVxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\";\nexport class LandingComponent {\n  constructor(messageService) {\n    this.messageService = messageService;\n    this.helperMessages = [];\n    this.displayMessageName = 'Ham';\n    this.displayMessageMessage = 'Hamblo';\n  }\n  ngOnInit() {\n    this.getAllMessages();\n  }\n  getAllMessages() {\n    this.messageService.getAllMessages().subscribe(messages => this.helperMessages = messages);\n    return this.helperMessages;\n  }\n  getRandomMessage() {\n    let currentMessageId = this.getRandomInt(0, this.helperMessages.length);\n    this.displayMessageName = this.helperMessages[currentMessageId].username;\n    this.displayMessageMessage = this.helperMessages[currentMessageId].message;\n  }\n  //gets random integer including min excluding max\n  getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n  static #_ = this.ɵfac = function LandingComponent_Factory(t) {\n    return new (t || LandingComponent)(i0.ɵɵdirectiveInject(i1.HelperMessageService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LandingComponent,\n    selectors: [[\"app-landing\"]],\n    decls: 20,\n    vars: 3,\n    consts: [[\"lang\", \"en\"], [\"charset\", \"utf-8\"], [\"href\", \"/landing\"], [\"name\", \"landing\", \"content\", \"width=device-width, initial-scale=1\"], [1, \"textContent\"], [4, \"ngFor\", \"ngForOf\"], [\"id\", \"logincontainer\"], [\"routerLink\", \"/loginPage\"], [\"routerLink\", \"/CreateUser\"]],\n    template: function LandingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n        i0.ɵɵelement(2, \"meta\", 1);\n        i0.ɵɵelementStart(3, \"title\");\n        i0.ɵɵtext(4, \"Landing\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"base\", 2)(6, \"meta\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 4)(8, \"h2\");\n        i0.ɵɵtext(9, \" Helper Messages \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"h4\");\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(12, LandingComponent_div_12_Template, 1, 0, \"div\", 5);\n        i0.ɵɵelementStart(13, \"div\", 6)(14, \"h1\");\n        i0.ɵɵtext(15, \"This is the temporary landing page\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"button\", 7);\n        i0.ɵɵtext(17, \"LOGIN\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 8);\n        i0.ɵɵtext(19, \"CREATE\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵtextInterpolate2(\"\", ctx.displayMessageName, \" donated saying \", ctx.displayMessageMessage, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.getAllMessages());\n      }\n    },\n    dependencies: [i2.NgForOf, i3.RouterLink],\n    styles: [_c0, _c0]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelement","LandingComponent","constructor","messageService","helperMessages","displayMessageName","displayMessageMessage","ngOnInit","getAllMessages","subscribe","messages","getRandomMessage","currentMessageId","getRandomInt","length","username","message","min","max","Math","ceil","floor","random","_","ɵɵdirectiveInject","i1","HelperMessageService","_2","selectors","decls","vars","consts","template","LandingComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LandingComponent_div_12_Template","ɵɵadvance","ɵɵtextInterpolate2","ɵɵproperty"],"sources":["C:\\Users\\samue\\SWEN261\\team-project-2231-swen-261-07-7-g-fundsinhighplaces\\ufund-ui\\UFund-Store\\src\\app\\public\\landing\\landing.component.ts","C:\\Users\\samue\\SWEN261\\team-project-2231-swen-261-07-7-g-fundsinhighplaces\\ufund-ui\\UFund-Store\\src\\app\\public\\landing\\landing.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\nimport { HelperMessage } from 'src/app/HelperMessage';\r\nimport { HelperMessageService } from 'src/app/helper-message.service';\r\n\r\n@Component({\r\n  selector: 'app-landing',\r\n  templateUrl: './landing.component.html',\r\n  styleUrls: ['./landing.component.scss']\r\n})\r\nexport class LandingComponent implements OnInit{\r\nhelperMessages: HelperMessage[] = []\r\ndisplayMessageName: String = 'Ham';\r\ndisplayMessageMessage: String = 'Hamblo';\r\n\r\nconstructor(private messageService: HelperMessageService){}\r\n\r\nngOnInit(): void {\r\n    this.getAllMessages();\r\n}\r\n\r\ngetAllMessages(): HelperMessage[]{\r\n  this.messageService.getAllMessages().subscribe(messages=> this.helperMessages = messages)\r\n  return this.helperMessages;\r\n}\r\n\r\ngetRandomMessage(): void{\r\nlet currentMessageId = this.getRandomInt(0,this.helperMessages.length);\r\nthis.displayMessageName = this.helperMessages[currentMessageId].username;\r\nthis.displayMessageMessage = this.helperMessages[currentMessageId].message;\r\n\r\n}\r\n//gets random integer including min excluding max\r\ngetRandomInt(min: number, max: number) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n}\r\n","<!doctype html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"utf-8\">\r\n  <title>Landing</title>\r\n  <base href=\"/landing\">\r\n  <meta name=\"landing\" content=\"width=device-width, initial-scale=1\">\r\n\r\n  <link rel=\"stylesheet\" \r\n          type=\"text/scss\" \r\n          href=\"landing.component.scss\">\r\n    \r\n</head>\r\n\r\n\r\n<div class=\"textContent\">\r\n  <h2> Helper Messages </h2>\r\n  <h4>{{displayMessageName}} donated saying {{displayMessageMessage}} </h4>\r\n</div>\r\n\r\n<div *ngFor=\"let messages of getAllMessages()\">\r\n</div>\r\n\r\n<div id=\"logincontainer\">\r\n    <h1>This is the temporary landing page</h1>\r\n    <button routerLink=\"/loginPage\">LOGIN</button>\r\n    <button routerLink=\"/CreateUser\">CREATE</button>\r\n</div>"],"mappings":";;;;;;ICoBAA,EAAA,CAAAC,SAAA,UACM;;;;ADXN,OAAM,MAAOC,gBAAgB;EAK7BC,YAAoBC,cAAoC;IAApC,KAAAA,cAAc,GAAdA,cAAc;IAJlC,KAAAC,cAAc,GAAoB,EAAE;IACpC,KAAAC,kBAAkB,GAAW,KAAK;IAClC,KAAAC,qBAAqB,GAAW,QAAQ;EAEkB;EAE1DC,QAAQA,CAAA;IACJ,IAAI,CAACC,cAAc,EAAE;EACzB;EAEAA,cAAcA,CAAA;IACZ,IAAI,CAACL,cAAc,CAACK,cAAc,EAAE,CAACC,SAAS,CAACC,QAAQ,IAAG,IAAI,CAACN,cAAc,GAAGM,QAAQ,CAAC;IACzF,OAAO,IAAI,CAACN,cAAc;EAC5B;EAEAO,gBAAgBA,CAAA;IAChB,IAAIC,gBAAgB,GAAG,IAAI,CAACC,YAAY,CAAC,CAAC,EAAC,IAAI,CAACT,cAAc,CAACU,MAAM,CAAC;IACtE,IAAI,CAACT,kBAAkB,GAAG,IAAI,CAACD,cAAc,CAACQ,gBAAgB,CAAC,CAACG,QAAQ;IACxE,IAAI,CAACT,qBAAqB,GAAG,IAAI,CAACF,cAAc,CAACQ,gBAAgB,CAAC,CAACI,OAAO;EAE1E;EACA;EACAH,YAAYA,CAACI,GAAW,EAAEC,GAAW;IACnCD,GAAG,GAAGE,IAAI,CAACC,IAAI,CAACH,GAAG,CAAC;IACpBC,GAAG,GAAGC,IAAI,CAACE,KAAK,CAACH,GAAG,CAAC;IACrB,OAAOC,IAAI,CAACE,KAAK,CAACF,IAAI,CAACG,MAAM,EAAE,IAAIJ,GAAG,GAAGD,GAAG,CAAC,GAAGA,GAAG,CAAC;EACtD;EAAC,QAAAM,CAAA,G;qBA3BYtB,gBAAgB,EAAAF,EAAA,CAAAyB,iBAAA,CAAAC,EAAA,CAAAC,oBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAhB1B,gBAAgB;IAAA2B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT7BnC,EAAA,CAAAqC,cAAA,cAAgB;QAEdrC,EAAA,CAAAC,SAAA,cAAsB;QACtBD,EAAA,CAAAqC,cAAA,YAAO;QAAArC,EAAA,CAAAsC,MAAA,cAAO;QAAAtC,EAAA,CAAAuC,YAAA,EAAQ;QACtBvC,EAAA,CAAAC,SAAA,cAAsB;QAOxBD,EAAA,CAAAuC,YAAA,EAAO;QAGPvC,EAAA,CAAAqC,cAAA,aAAyB;QAClBrC,EAAA,CAAAsC,MAAA,wBAAgB;QAAAtC,EAAA,CAAAuC,YAAA,EAAK;QAC1BvC,EAAA,CAAAqC,cAAA,UAAI;QAAArC,EAAA,CAAAsC,MAAA,IAAgE;QAAAtC,EAAA,CAAAuC,YAAA,EAAK;QAG3EvC,EAAA,CAAAwC,UAAA,KAAAC,gCAAA,iBACM;QAENzC,EAAA,CAAAqC,cAAA,cAAyB;QACjBrC,EAAA,CAAAsC,MAAA,0CAAkC;QAAAtC,EAAA,CAAAuC,YAAA,EAAK;QAC3CvC,EAAA,CAAAqC,cAAA,iBAAgC;QAAArC,EAAA,CAAAsC,MAAA,aAAK;QAAAtC,EAAA,CAAAuC,YAAA,EAAS;QAC9CvC,EAAA,CAAAqC,cAAA,iBAAiC;QAAArC,EAAA,CAAAsC,MAAA,cAAM;QAAAtC,EAAA,CAAAuC,YAAA,EAAS;;;QAT9CvC,EAAA,CAAA0C,SAAA,IAAgE;QAAhE1C,EAAA,CAAA2C,kBAAA,KAAAP,GAAA,CAAA9B,kBAAA,sBAAA8B,GAAA,CAAA7B,qBAAA,MAAgE;QAG5CP,EAAA,CAAA0C,SAAA,GAAmB;QAAnB1C,EAAA,CAAA4C,UAAA,YAAAR,GAAA,CAAA3B,cAAA,GAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}